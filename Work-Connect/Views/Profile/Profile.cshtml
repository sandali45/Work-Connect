@{
    ViewData["Title"] = "Profile";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Profile Page</title>
    <link rel="stylesheet" href="~/css/Profile.css" asp-append-version="true">
    <script src="Profile.js" defer></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
</head>

<body>
    @Html.Partial("Navbarhtml")
    <!-- Profile Section -->
    <div class="profile-header">
        <div class="cover-photo">
            <img id="cover-photo" src="placeholder.jpg">
            <input type="file" id="cover-photo-input" style="display: none;" accept="image/*" onchange="displayCoverPhoto(this)">
            <i class="fas fa-camera camera-icon" onclick="document.getElementById('cover-photo-input').click();"></i>
        </div>

        <div class="profile-pic">
            <img id="profile-picture" src="placeholder.jpg">
            <input type="file" id="profile-pic-input" accept="image/*" onchange="displayProfilePic(this)">
            <i class="fas fa-camera profile-camera-icon" onclick="document.getElementById('profile-pic-input').click();"></i>
        </div>

        <!-- Edit icon placed next to profile pic -->
        <div class="edit-icon" style="position: absolute; top: 150px; right: 30px; display: block; border: 1px solid #f5f5f5; font-size: 20px; color: #411364;">
            <a href="@Url.Action("EditDetails", "EditDetails")">
                <i class="fas fa-edit"></i>
            </a>
        </div>

        <div class="header-content">
            <div class="profile-info">
                <br><br><br><br>
                <p>@ViewBag.UserName</p> <!-- Display the user's name here -->
                <p id="occupation" onclick="editField('occupation')">@ViewBag.Occupation</p>
                <p id="address" onclick="editField('address')">@ViewBag.Address</p>
                <p>@ViewBag.Email</p>
            </div>
        </div>
    </div>

    <!-- About Section -->
    <div class="about-section">
        <div id="description-container" class="editable" onclick="editDescription()">
            <p id="description">Small description about self</p>
            <input type="text" id="description-input" style="display: none;" />
            <button id="save-description" type="button" style="display: none;" onclick="saveDescription()">Save</button>
        </div>
    </div>

    <!-- Experience Section -->
    <div class="section experience-section">
        <h2>Experience</h2>
        <div id="experience-container" class="editable" onclick="editExperience()">
            <p id="experience-text">Add your experience</p>
            <textarea id="experience-input" style="display: none;"></textarea>
            <button id="save-experience" type="button" style="display: none;" onclick="saveExperience()">Save</button>
        </div>
    </div>

    <!-- Education Section -->
    <div class="section education-section">
        <h2>Education</h2>
        <div id="education-container" class="editable" onclick="editEducation()">
            <p id="education-text">Add your education</p>
            <textarea id="education-input" style="display: none;"></textarea>
            <button id="save-education" type="button" style="display: none;" onclick="saveEducation()">Save</button>
        </div>
    </div>

    <!-- Skills Section -->
    <div class="section skills-section">
        <h2>Skills</h2>
        <div id="skills-container" class="editable" onclick="editSkills()">
            <p id="skills-text">Add your skills</p>
            <textarea id="skills-input" style="display: none;"></textarea>
            <button id="save-skills" type="button" style="display: none;" onclick="saveSkills()">Save</button>
        </div>
    </div>

    <script>
        function editField(field) {
            var fieldElement = document.getElementById(field);
            var inputField = document.createElement("input");
            inputField.type = "text";
            inputField.value = fieldElement.innerText === "Add " + field.charAt(0).toUpperCase() + field.slice(1) ? "" : fieldElement.innerText;
            inputField.onblur = function () { saveField(field, inputField.value); };
            fieldElement.innerHTML = "";
            fieldElement.appendChild(inputField);
            inputField.focus();
        }

        function saveField(field, value) {
            var fieldElement = document.getElementById(field);
            if (value.trim()) {
                fieldElement.innerText = value;
            } else {
                fieldElement.innerText = "Add " + field.charAt(0).toUpperCase() + field.slice(1);
            }
        }

        function editDescription() {
            var descriptionText = document.getElementById("description").innerText;
            var inputField = document.getElementById("description-input");

            inputField.style.display = "block";
            inputField.value = descriptionText;
            inputField.focus();
            document.getElementById("description").style.display = "none";
            document.getElementById("save-description").style.display = "inline-block";
        }

        function saveDescription() {
            var inputField = document.getElementById("description-input");
            var newDescription = inputField.value.trim();

            if (newDescription) {
                // Update the description on the UI
                document.getElementById("description").innerText = newDescription;

                // Send the updated description to the server
                var xhr = new XMLHttpRequest();
                xhr.open("POST", "/Profile/UpdateProfileField", true);
                xhr.setRequestHeader("Content-Type", "application/json;charset=UTF-8");

                xhr.onreadystatechange = function () {
                    if (xhr.readyState === 4 && xhr.status === 200) {
                        console.log("Description updated successfully");
                    } else if (xhr.readyState === 4) {
                        console.error("Error updating description");
                    }
                };

                // Send the field update request to the backend
                xhr.send(JSON.stringify({ field: "Description", value: newDescription }));
            }

            // Hide the input field and show the description text
            document.getElementById("description").style.display = "block";
            inputField.style.display = "none";
            document.getElementById("save-description").style.display = "none";
        }

        function editExperience() {
            var text = document.getElementById("experience-text").innerText;
            var input = document.getElementById("experience-input");

            input.style.display = "block";
            input.value = text;
            input.focus();
            document.getElementById("experience-text").style.display = "none";
            document.getElementById("save-experience").style.display = "inline-block";
        }

        function saveExperience() {
            var input = document.getElementById("experience-input");
            var newText = input.value.trim();

            if (newText) {
                document.getElementById("experience-text").innerText = newText;
                updateProfileField('Experience', newText);
            }

            document.getElementById("experience-text").style.display = "block";
            input.style.display = "none";
            document.getElementById("save-experience").style.display = "none";
        }

        function editEducation() {
            var text = document.getElementById("education-text").innerText;
            var input = document.getElementById("education-input");

            input.style.display = "block";
            input.value = text;
            input.focus();
            document.getElementById("education-text").style.display = "none";
            document.getElementById("save-education").style.display = "inline-block";
        }

        function saveEducation() {
            var input = document.getElementById("education-input");
            var newText = input.value.trim();

            if (newText) {
                document.getElementById("education-text").innerText = newText;
                updateProfileField('Education', newText);
            }

            document.getElementById("education-text").style.display = "block";
            input.style.display = "none";
            document.getElementById("save-education").style.display = "none";
        }

        function editSkills() {
            var text = document.getElementById("skills-text").innerText;
            var input = document.getElementById("skills-input");

            input.style.display = "block";
            input.value = text;
            input.focus();
            document.getElementById("skills-text").style.display = "none";
            document.getElementById("save-skills").style.display = "inline-block";
        }

        function saveSkills() {
            var input = document.getElementById("skills-input");
            var newText = input.value.trim();

            if (newText) {
                document.getElementById("skills-text").innerText = newText;
                updateProfileField('Skills', newText);
            }

            document.getElementById("skills-text").style.display = "block";
            input.style.display = "none";
            document.getElementById("save-skills").style.display = "none";
        }

        function updateProfileField(field, value) {
            var xhr = new XMLHttpRequest();
            xhr.open("POST", "/Profile/UpdateProfileField", true);
            xhr.setRequestHeader("Content-Type", "application/json;charset=UTF-8");
            xhr.onreadystatechange = function () {
                if (xhr.readyState === 4 && xhr.status === 200) {
                    console.log("Field updated successfully");
                }
            };
            xhr.send(JSON.stringify({ field: field, value: value }));
        }
    </script>
</body>
</html>
